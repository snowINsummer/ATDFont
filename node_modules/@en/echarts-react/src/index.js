import React from 'react';
import ec from 'echarts';
import deep from 'deep';

var EcharsReact = React.createClass({
    render() {
        return  <div 
            ref = "me"
            name={this.props.name}
            className={this.props.className}
            style = { Object.assign({ width: 100, height: 100 }, this.props.style) }> 
        </div>;
    },
    componentDidMount() {
        this.refs.me.addEventListener("mousedown",e=>{
            this.mousex = e.pageX;
            this.mousey = e.pageY;
        })

        this.echart = ec.init(this.refs.me);
        this.echart.setOption(this.props.option);
        this.bindEvents(this.props);
        window.addEventListener("resize", this.echart.resize);
    },
    bindEvents(props){
        this.echart.on("mapselectchanged", props.onMapSelectChanged);
        this.echart.on("click", e=>e.event.event.pageX == this.mousex && e.event.event.pageY == this.mousey && props.onClick(e));
        this.echart.on("mouseover", props.onMouseOver);
        this.echart.on("mouseout", props.onMouseOut);
    },
    shouldComponentUpdate(nextProps) {
        var echart = this.echart;

        if(!deep.equals(this.props,nextProps)){

            echart.off("mapselectchanged");
            echart.off("click");
            echart.off("mouseover");
            echart.off("mouseout");
            this.bindEvents(nextProps);

            if(!deep.equals(this.props.option,nextProps.option)){
                echart.setOption(nextProps.option,!!nextProps.notMerge);
            }

            if(!deep.equals(this.props.style,nextProps.style)){
                echart.resize();
            }
        }

        return false;
    },

    componentWillUnmount() {
        window.removeEventListener("resize", this.echart.resize);
        this.refs.me.removeEventListener("mousedown");
        this.echart.dispose();
    }
});

export default EcharsReact;
